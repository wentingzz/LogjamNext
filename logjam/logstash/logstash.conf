input {
    file {
      path => ["/logjam/logjam_categories/cassandracommands/*", "/logjam/logjam_categories/systemcommands/*"]
      start_position => beginning
      codec => multiline {
        pattern => "<-+>"
        negate => true
        what => next
      }
    }
    file {
      path => ["/logjam/logjam_categories/cassandragc/*"]
      start_position => beginning
      codec => multiline {
        pattern => "%{YEAR:year}-%{MONTHNUM:month}-%{MONTHDAY:day}T%{TIME:time}"
        negate => true
        what => next
      }
    }
    file {
        path => ["/logjam/logjam_categories/baseoscommands/*", "/logjam/logjam_categories/bycast/*", "/logjam/logjam_categories/audit/*", "/logjam/logjam_categories/cassandragc/*", "/logjam/logjam_categories/gduserver/*", "/logjam/logjam_categories/initsg/*", "/logjam/logjam_categories/kern/*", "/logjam/logjam_categories/messages/*", "/logjam/logjam_categories/syslog/*", "/logjam/logjam_categories/pgemgmtapi/*", "/logjam/logjam_categories/pgeimageupdater/*", "/logjam/logjam_categories/servermanager/*", "/logjam/logjam_categories/sgfwupdate/*", "/logjam/logjam_categories/storagegriddaemon/*", "/logjam/logjam_categories/storagegridnode/*", "/logjam/logjam_categories/install/*", "/logjam/logjam_categories/other/*", "/logjam/logjam_categories/dmesg/*", "/logjam/logjam_categories/cassandrasystem/*", "/logjam/logjam_categories/upgrade/*"]
        start_position => beginning
    }
}
filter {
    grok {
      match => { "path" => ["/logjam/logjam_categories/(?<category>[^/]*)/(?<case>[^-]*)-(?<storagegrid_version>[^-]*)-(?<categorize_time>[^-]*)%{GREEDYDATA:filename}","/logjam/logjam_categories/(?<category>[^/]*)/(?<case>[^-]*)-(?<storagegrid_version>[^-]*)-(?<categorize_time>[^-]*)-%{GREEDYDATA:filename}"]}
    }
    
    mutate {
      remove_field => [path]
    }
}
output {
    stdout { codec => rubydebug }
}
output {
  elasticsearch {
    hosts => ["elasticsearch"]
    manage_template => false
    index => "logjam-test"
  }
}
